@{
    ViewBag.Title = "Bank";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<a href="https://localhost:44368/swagger/index.html">Contratos (Bank)</a>

<body>
    <div class="container-xl">
        <div class="table-responsive">
            <div class="table-wrapper">
                <div class="table-title">
                    <div class="row">
                        <div class="col-sm-6">
                            <h2>Gestão</b></h2>
                        </div>
                        <div class="col-sm-6">
                            <a href="#addData" class="btn btn-success" data-toggle="modal"><i class="material-icons">&#xE147;</i> <span>Adicionar</span></a>
                        </div>
                        <div id="dvAlert"></div>
                    </div>
                </div>                
                <table id="tblBank" class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Código</th>
                            <th>Nome</th>
                            <th>Ativo?</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody> </tbody>
                </table>
            </div>
        </div>
    </div>
    <!-- New Modal HTML -->
    <div id="addData" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <form id="formAddData">
                    <div class="modal-header">
                        <h4 class="modal-title">Cadastrar</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="txtNewBankName" class="col-form-label">Nome</label>
                            <input type="text" id="txtNewBankName" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="txtNewBankCode">Código</label>
                            <input type="text" id="txtNewBankCode" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label>Ativo?</label>
                            <select id="selNewBankActive" name="selNewBankActive">
                                <option value="true" selected>Sim</option>
                                <option value="false">Não</option>
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <input type="button" class="btn btn-default" data-dismiss="modal" value="Cancelar">
                        <input type="submit" class="btn btn-success" value="Cadastrar">
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!-- Edit Modal HTML -->
    <div id="editData" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <form id="formEditData">
                    <div class="modal-header">
                        <h4 class="modal-title">Editar</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="txtEditBankName">Nome</label>
                            <input type="text" id="txtEditBankName" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="txtEditBankCode">Código</label>
                            <input type="text" id="txtEditBankCode" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label>Ativo?</label>
                            <select id="selEditBankActive" name="selEditBankActive">
                                <option value="true">Sim</option>
                                <option value="false">Não</option>
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <input type="button" class="btn btn-default" data-dismiss="modal" value="Cancelar">                        
                        <span id='editButton'></span>
                    </div>
                    <input type="hidden" id="idEditParam" />
                </form>
            </div>
        </div>
    </div>
    <!-- Delete Modal HTML -->
    <div id="deleteData" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <form>
                    <div class="modal-header">
                        <h4 class="modal-title">Deletar</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    </div>
                    <div class="modal-body">
                        <p>Você tem certeza que deseja deletar este registro?</p>
                        <p class="text-warning"><small>Essa ação não pode ser desfeita.</small></p>
                    </div>
                    <div class="modal-footer">
                        <input type="button" class="btn btn-default" data-dismiss="modal" value="Cancelar">                        
                        <span id='deleteButton'></span>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <script type="text/javascript">

        $(document).ready(function () {
            GetAllBanks();
        });

        $('#formEditData').on('submit', function (e) {
            e.preventDefault();
            Edit($("#idEditParam").val());
        });

        $('#formAddData').on('submit', function (e) {
            e.preventDefault();
            New();
        });

        function EditModal(id) {
            $("#dvAlert").empty();
            $('#editData').modal();
            $('#editButton').html('<input type="submit" class="btn btn-warning" value="Atualizar">');
            $('#idEditParam').val(id);

            if (id > 0) {

                $.getJSON("/Bank/GetBankById?BankId=" + id, function (data) {
                    $("#txtEditBankCode").val(data.bankCode);
                    $("#txtEditBankName").val(data.name);
                    $('#selEditBankActive').val(data.active === true ? 'true' :'false');
                });
            }
        }

        function DeleteModal(id) {
            $("#dvAlert").empty();
            $('#deleteData').modal();
            $('#deleteButton').html('<input type="button" onclick="Delete(' + id + ')" data-dismiss="modal" class="btn btn-danger" value="Deletar">');
        }

        function mountMsg(type, title, msg, over) {

            $("#dvAlert").empty();
            
            var alert = "   <div class='alert alert-" + type+" alert-dismissible fade show'>"
                        + "     <strong>" + title + "!</strong> " + msg
                        + " </div>";
            $("#dvAlert").append(alert);
        }

        function GetAllBanks() {

            if ($.fn.dataTable.isDataTable('#tblBank')) {

                $('#tblBank').DataTable().clear();
                $('#tblBank').DataTable().destroy();

            }

            $.getJSON("/Bank/GetAllBanks", function (banks) {
                $("#tblBank tbody tr").remove();
                $.map(banks, function (bank) {
                    $("#tblBank tbody").append("<tr>"
                        + " <td>" + bank.id + "</td>"
                        + " <td>" + bank.bankCode + "</td>"
                        + " <td>" + bank.name + "</td>"
                        + " <td>" + bank.active + "</td>"
                        + " <td>"
                        + "     <a href='#editData' onclick='EditModal(" + bank.id + ")' class='edit' data-toggle='modal'><i class='material-icons' data-toggle='tooltip' title='Edit'>&#xE254;</i></a>"
                        + "     <a href='#deleteData' onclick='DeleteModal(" + bank.id + ")' class='delete' data-toggle='modal'><i class='material-icons' data-toggle='tooltip' title='Delete'>&#xE872;</i></a>"
                        + " </td>"
                        + "</tr>");
                });

                $('#tblBank').DataTable({
                    pageLength: 5,
                    lengthMenu: [5, 10, 20, 100],
                    "language": {
                        "emptyTable": "Nenhum registro encontrado",
                        "info": "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                        "infoEmpty": "Mostrando 0 até 0 de 0 registros",
                        "infoFiltered": "(Filtrados de _MAX_ registros)",
                        "infoThousands": ".",
                        "loadingRecords": "Carregando...",
                        "processing": "Processando...",
                        "zeroRecords": "Nenhum registro encontrado",
                        "search": "Pesquisar",
                        "paginate": {
                            "next": "Próximo",
                            "previous": "Anterior",
                            "first": "Primeiro",
                            "last": "Último"
                        },
                        "aria": {
                            "sortAscending": ": Ordenar colunas de forma ascendente",
                            "sortDescending": ": Ordenar colunas de forma descendente"
                        },
                        "select": {
                            "rows": {
                                "_": "Selecionado %d linhas",
                                "1": "Selecionado 1 linha"
                            },
                            "cells": {
                                "1": "1 célula selecionada",
                                "_": "%d células selecionadas"
                            },
                            "columns": {
                                "1": "1 coluna selecionada",
                                "_": "%d colunas selecionadas"
                            }
                        },
                        "buttons": {
                            "copySuccess": {
                                "1": "Uma linha copiada com sucesso",
                                "_": "%d linhas copiadas com sucesso"
                            },
                            "collection": "Coleção  <span class=\"ui-button-icon-primary ui-icon ui-icon-triangle-1-s\"><\/span>",
                            "colvis": "Visibilidade da Coluna",
                            "colvisRestore": "Restaurar Visibilidade",
                            "copy": "Copiar",
                            "copyKeys": "Pressione ctrl ou u2318 + C para copiar os dados da tabela para a área de transferência do sistema. Para cancelar, clique nesta mensagem ou pressione Esc..",
                            "copyTitle": "Copiar para a Área de Transferência",
                            "csv": "CSV",
                            "excel": "Excel",
                            "pageLength": {
                                "-1": "Mostrar todos os registros",
                                "_": "Mostrar %d registros"
                            },
                            "pdf": "PDF",
                            "print": "Imprimir"
                        },
                        "autoFill": {
                            "cancel": "Cancelar",
                            "fill": "Preencher todas as células com",
                            "fillHorizontal": "Preencher células horizontalmente",
                            "fillVertical": "Preencher células verticalmente"
                        },
                        "lengthMenu": "Exibir _MENU_ resultados por página",
                        "searchBuilder": {
                            "add": "Adicionar Condição",
                            "button": {
                                "0": "Construtor de Pesquisa",
                                "_": "Construtor de Pesquisa (%d)"
                            },
                            "clearAll": "Limpar Tudo",
                            "condition": "Condição",
                            "conditions": {
                                "date": {
                                    "after": "Depois",
                                    "before": "Antes",
                                    "between": "Entre",
                                    "empty": "Vazio",
                                    "equals": "Igual",
                                    "not": "Não",
                                    "notBetween": "Não Entre",
                                    "notEmpty": "Não Vazio"
                                },
                                "number": {
                                    "between": "Entre",
                                    "empty": "Vazio",
                                    "equals": "Igual",
                                    "gt": "Maior Que",
                                    "gte": "Maior ou Igual a",
                                    "lt": "Menor Que",
                                    "lte": "Menor ou Igual a",
                                    "not": "Não",
                                    "notBetween": "Não Entre",
                                    "notEmpty": "Não Vazio"
                                },
                                "string": {
                                    "contains": "Contém",
                                    "empty": "Vazio",
                                    "endsWith": "Termina Com",
                                    "equals": "Igual",
                                    "not": "Não",
                                    "notEmpty": "Não Vazio",
                                    "startsWith": "Começa Com"
                                },
                                "array": {
                                    "contains": "Contém",
                                    "empty": "Vazio",
                                    "equals": "Igual à",
                                    "not": "Não",
                                    "notEmpty": "Não vazio",
                                    "without": "Não possui"
                                }
                            },
                            "data": "Data",
                            "deleteTitle": "Excluir regra de filtragem",
                            "logicAnd": "E",
                            "logicOr": "Ou",
                            "title": {
                                "0": "Construtor de Pesquisa",
                                "_": "Construtor de Pesquisa (%d)"
                            },
                            "value": "Valor",
                            "leftTitle": "Critérios Externos",
                            "rightTitle": "Critérios Internos"
                        },
                        "searchPanes": {
                            "clearMessage": "Limpar Tudo",
                            "collapse": {
                                "0": "Painéis de Pesquisa",
                                "_": "Painéis de Pesquisa (%d)"
                            },
                            "count": "{total}",
                            "countFiltered": "{shown} ({total})",
                            "emptyPanes": "Nenhum Painel de Pesquisa",
                            "loadMessage": "Carregando Painéis de Pesquisa...",
                            "title": "Filtros Ativos"
                        },
                        "thousands": ".",
                        "datetime": {
                            "previous": "Anterior",
                            "next": "Próximo",
                            "hours": "Hora",
                            "minutes": "Minuto",
                            "seconds": "Segundo",
                            "amPm": [
                                "am",
                                "pm"
                            ],
                            "unknown": "-",
                            "months": {
                                "0": "Janeiro",
                                "1": "Fevereiro",
                                "10": "Novembro",
                                "11": "Dezembro",
                                "2": "Março",
                                "3": "Abril",
                                "4": "Maio",
                                "5": "Junho",
                                "6": "Julho",
                                "7": "Agosto",
                                "8": "Setembro",
                                "9": "Outubro"
                            },
                            "weekdays": [
                                "Domingo",
                                "Segunda-feira",
                                "Terça-feira",
                                "Quarta-feira",
                                "Quinte-feira",
                                "Sexta-feira",
                                "Sábado"
                            ]
                        },
                        "editor": {
                            "close": "Fechar",
                            "create": {
                                "button": "Novo",
                                "submit": "Criar",
                                "title": "Criar novo registro"
                            },
                            "edit": {
                                "button": "Editar",
                                "submit": "Atualizar",
                                "title": "Editar registro"
                            },
                            "error": {
                                "system": "Ocorreu um erro no sistema (<a target=\"\\\" rel=\"nofollow\" href=\"\\\">Mais informações<\/a>)."
                            },
                            "multi": {
                                "noMulti": "Essa entrada pode ser editada individualmente, mas não como parte do grupo",
                                "restore": "Desfazer alterações",
                                "title": "Multiplos valores",
                                "info": "Os itens selecionados contêm valores diferentes para esta entrada. Para editar e definir todos os itens para esta entrada com o mesmo valor, clique ou toque aqui, caso contrário, eles manterão seus valores individuais."
                            },
                            "remove": {
                                "button": "Remover",
                                "confirm": {
                                    "_": "Tem certeza que quer deletar %d linhas?",
                                    "1": "Tem certeza que quer deletar 1 linha?"
                                },
                                "submit": "Remover",
                                "title": "Remover registro"
                            }
                        },
                        "decimal": ","
                    }
                });
                

            }).fail(function (jqXHR, textStatus, errorThrown) {
                var err = textStatus + " (GetAll) ," + errorThrown;
                mountMsg("danger", "Erro", err);
            });
        }

        function Delete(DataId) {

            if (DataId > 0) {
                $.ajax({
                    url: '/Bank/DeleteBank?BankId=' + DataId,
                    type: 'DELETE',
                    dataType: 'json'
                }).done(function() {
                    mountMsg("success", "Sucesso", "Dado removido com sucesso!");
                    GetAllBanks();
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    var err = textStatus + " (Delete) ," + errorThrown;
                    mountMsg("danger", "Erro", err);
                });
            }
        }

        function New() {
            
            var oBank = {
                BankCode: $("#txtNewBankCode").val(),
                Name: $("#txtNewBankName").val(),
                Active: $('select[name=selNewBankActive] option').filter(':selected').val()
            };

            $.ajax({
                url: '/Bank/AddBank',
                type: 'POST',
                data: oBank,
                dataType: 'json'
            }).done(function (data, textStatus, xhr) {

                if (data === true) {
                    mountMsg("success", "Sucesso", "Dado cadastrado com sucesso!");

                } else {
                    var result = JSON.parse(JSON.stringify(data));
                    var err = JSON.stringify(result.errors);
                    mountMsg("danger", "Erro", err);
                }

                GetAllBanks();

            }).fail(function (jqXHR, textStatus, errorThrown) {
                var err = errorThrown;
                mountMsg("danger", "Erro", err);
            }).always(function () {
                $("#formAddData").trigger("reset");
                $('#addData').modal('toggle');
            });;
        }

        function Edit(DataId) {

            var oBank = {
                id: DataId,
                BankCode: $("#txtEditBankCode").val(),
                Name: $("#txtEditBankName").val(),
                Active: $('select[name=selEditBankActive] option').filter(':selected').val()
            };

            $.ajax({
                url: '/Bank/UpdateBank?BankId=' + oBank.id,
                type: 'PUT',
                data: oBank,
                dataType: 'json'
            }).done(function (data, textStatus, xhr) {

                if (data === true) {
                    mountMsg("success", "Sucesso", "Dado atualizado com sucesso!");

                } else {
                    var result = JSON.parse(JSON.stringify(data));
                    var err = JSON.stringify(result.errors);
                    mountMsg("danger", "Erro", err);
                }

                GetAllBanks();

            }).fail(function (jqXHR, textStatus, errorThrown) {
                var err = errorThrown;
                mountMsg("danger", "Erro", err);
            }).always(function () {
                $('#editData').modal('toggle');
            });;
        }

    </script>

</body>